FILE: while.kt
    public? final? fun foo(limit: Int): kotlin/Unit {
        lvar k: <implicit> = Int(0)
        some@while(<(k#, limit#)) {
            lval <unary>: <implicit> = k#
            k# = <unary>#.inc#()
            <unary>#
            println#(k#)
            while(==(k#, Int(13))) {
                lval <unary>: <implicit> = k#
                k# = <unary>#.inc#()
                <unary>#
                when () {
                    <(k#, limit#) ->  {
                        break@@@[<(k#, limit#)]
                    }
                    else ->  {
                    }
                }

                when () {
                    >(k#, limit#) ->  {
                        continue@@@[==(k#, Int(13))]
                    }
                    else ->  {
                    }
                }

            }

        }

    }
    public? final? fun bar(limit: Int): kotlin/Unit {
        lvar k: <implicit> = limit#
        do {
            lval <unary>: <implicit> = k#
            k# = <unary>#.dec#()
            <unary>#
            println#(k#)
        }
        while(>=(k#, Int(0)))
    }
